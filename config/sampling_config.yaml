# Sampling configuration for scripts/batch_rollout.py
#
# You can pass this file with:
#   python scripts/batch_rollout.py --config config/sampling_config.yaml \
#     --num-samples 2000 --input-data input_data.csv --time-range 2015 2035 --seed 123
#
# Notes:
# - Distributions supported: fixed, uniform, normal, lognormal, shifted_lognormal, beta, choice
# - normal supports optional min/max with clip_to_bounds: true
# - lognormal uses parameters in log space: mu, sigma; supports min/max with clip_to_bounds
# - beta draws in [0,1] then scales to [min,max]
# - choice supports optional probabilities p
# - 80% CI-first: For normal/lognormal, if ci80 is provided as [low, high] OR ci80_low/ci80_high are provided,
#   they TAKE PRECEDENCE over mean/sd (normal) or mu/sigma (lognormal). If both are present, mean/sd or mu/sigma
#   are ignored and a warning is emitted once per parameter.

seed: 32432432
initial_progress: 0.0
# If omitted on CLI, this is used; otherwise CLI --time-range overrides
time_range: [2012.0, 2045.0]

num_rollouts: 1000
input_data: input_data.csv

parameters:
  # Superhuman coder time horizon + extrapolation
  sc_time_horizon_minutes:
    dist: lognormal
    ci80: [62280, 9964800000] # [6 work months, 80,000 work years]
  horizon_extrapolation_type:
    dist: choice
    values: ["exponential", "decaying doubling time"]
    p: [0.3, 0.7]

  # Gaps mode
  pre_gap_sc_time_horizon:
    dist: lognormal
    ci80: [1000, 1000000] # Practical range used in UI (10^3 to 10^6 minutes)
    clip_to_bounds: true
  include_gap:
    dist: choice
    values: ["gap", "no gap"]
    p: [0.5, 0.5]
  gap_years:
    dist: fixed
    value: 2.0

  # Manual horizon fitting (used when horizon_extrapolation_type="decaying doubling time")
  present_day:
    dist: fixed
    value: 2025.25
  present_horizon:
    dist: fixed
    value: 15.0
  present_doubling_time:
    dist: lognormal
    ci80: [0.25, 0.667]
  doubling_decay_rate:
    dist: beta
    alpha: 1.5
    beta: 20.0
    min: 0.000001
    max: 0.5
    clip_to_bounds: true

  
  # coding labor
  rho_coding_labor:
    dist: fixed
    value: -2.0

  # experiment capacity
  direct_input_exp_cap_ces_params:
    dist: fixed
    value: false
  inf_compute_asymptote:
    dist: shifted_lognormal
    ci80: [25, 1000000]
    shift: 1.0
  inf_labor_asymptote:
    dist: shifted_lognormal
    ci80: [1, 200]
    shift: 1.0
  labor_anchor_exp_cap:
    dist: shifted_lognormal
    ci80: [0.3, 1.2]
    shift: 1.0
  inv_compute_anchor_exp_cap:
    dist: shifted_lognormal
    ci80: [0.75, 3.0]
    shift: 1.0

  swe_multiplier_at_present_day:
    dist: shifted_lognormal
    ci80: [0.08, 1.5]
    shift: 1.0
  automation_interp_type:
    dist: fixed
    value: "linear"

  # Research taste dynamics
  ai_research_taste_at_superhuman_coder_sd:
    dist: normal
    ci80: [-2.5, 4.5]
  ai_research_taste_slope:
    dist: lognormal
    ci80: [0.45, 7.65]
  # Software scale / normalization
  r_software:
    dist: lognormal
    ci80: [0.7, 9]
